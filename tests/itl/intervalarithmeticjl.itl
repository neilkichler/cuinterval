/*

Unit tests adapted from IntervalArithmetic.jl

*/

testcase iajl_sinpi {
    sinpi [empty] = [empty];
    sinpi [entire] = [-1.0, 1.0];
    sinpi [1.0, 2.0] = [-1.0, 0.0];
    sinpi [0.5, 1.5] = [-1.0, 1.0];

    sinpi [1.0, 1.0] = [0.0, 0.0];
    sinpi [2.0, 2.0] = [0.0, 0.0];
    sinpi [0.5, 0.5] = [1.0, 1.0];
    sinpi [1.5, 1.5] = [-1.0, -1.0];
    sinpi [0.25, 0.75] = [0x1.6a09e667f3bcdp-1, 1.0];
    sinpi [-0.25, 0.25] = [-0x1.6a09e667f3bcdp-1, 0x1.6a09e667f3bcdp-1];


    // some additional ones
    sinpi [0.0, 2.0] = [-1.0, 1.0];
    sinpi [36.0, 37.0] = [0.0, 1.0];
}

testcase iajl_cospi {
    cospi [empty] = [empty];
    cospi [entire] = [-1.0, 1.0];
    cospi [1.0, 2.0] = [-1.0, 1.0];
    cospi [0.5, 1.5] = [-1.0, 0.0];

    cospi [1.0, 1.0] = [-1.0, -1.0];
    cospi [2.0, 2.0] = [1.0, 1.0];
    cospi [0.5, 0.5] = [0.0, 0.0];
    cospi [1.5, 1.5] = [0.0, 0.0];
    cospi [0.25, 0.75] = [-0x1.6a09e667f3bcdp-1, 0x1.6a09e667f3bcdp-1];
    cospi [-0.25, 0.25] = [0x1.6a09e667f3bcdp-1, 1.0];


    // some additional ones
    cospi [0.0, 2.0] = [-1.0, 1.0];
    cospi [36.0, 37.0] = [-1.0, 1.0];
}

testcase iajl_tan {
    tan [0.5, 0.5] = [0.54630248984379048, 0.5463024898437906];
    tan [0.5, 1.67] = [entire];
    tan [1.67, 3.2] = [-10.047182299210307, 0.05847385445957865];
    tan [6.638314112824137, 8.38263151220128] = [entire];
}

testcase iajl_rootn {
    rootn [empty] 3 = [empty];
    rootn [empty] 4 = [empty];
    rootn [empty] -3 = [empty];
    rootn [empty] -4 = [empty];
    rootn [1, 2] 0 = [empty];
    rootn [5, 8] 0 = [empty];
    rootn [1, 7] 0 = [empty];
    rootn [8, 27] 3 = [2, 3];
    rootn [0, 27] 3 = [0, 3];
    // rootn [-27, 0] 3 = [-3, 0];
    // rootn [-27, 27] 3 = [-3, 3];
    // rootn [-27, -8] 3 = [-3, -2];
    rootn [16, 81] 4 = [2, 3];
    rootn [0, 81] 4 = [0, 3];
    // rootn [-81, 0] 4 = [0, 0];
    // rootn [-81, 81] 4 = [0, 3];
    // rootn [-81, -16] 4 = [empty];
    // rootn [8, 27] -3 = [1/3, 1/2];
    // rootn [0, 27] -3 = [1/3, infinity];
    // rootn [-27, 0] -3 = [-infinity, -1/3];
    // rootn [-27, 27] -3 = [-infinity, infinity];
    // rootn [-27, -8] -3 = [-1/2, -1/3];
    // rootn [16, 81] -4 = [1/3, 1/2];
    // rootn [0, 81] -4 = [1/3, infinity];
    // rootn [-81, 0] -4 = [empty];
    // rootn [-81, 1] 1 = [-81, 1];
    // rootn [-81, 81] -4 = [1/3, infinity];
    // rootn [-81, -16] -4 = [empty];
    // rootn [-81, -16] 1 = [-81, -16];
}
